<?php
// $Id$

/**
 * @file
 * Generates a printable application form for signups to sign and send back.
 */

/**
 * Implementation of hook_theme().
 */
function signup_application_theme() {
  return array(
    'signup_application_form' => array(
      'arguments' => array('signup' => NULL),
      'file' => 'signup_application.pages.inc',
      'template' => 'signup_application-form',
    ),
    'signup_application_custom_data' => array(
      'arguments' => array('data' => NULL),
      'file' => 'signup_application.pages.inc',
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function signup_application_menu() {
  $items['signup/application/%/%signup_menu/%'] = array(
    'title callback' => 'signup_application_menu_title',
    'title arguments' => array(3),
    'page callback' => 'signup_application_generate',
    'page arguments' => array(2, 3),
    'access callback' => 'signup_application_menu_access',
    'access arguments' => array(3, 4),
    'file' => 'signup_application.pages.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Menu title callback.
 *
 * @param $signup
 *   A signup object.
 */
function signup_application_menu_title($signup) {
  return t('@title application form', array('@title' => $signup->title));
}

/**
 * Menu access callback.
 *
 * @param $signup
 *   A signup object.
 * @param $token
 *   Access token.
 */
function signup_application_menu_access($signup, $token) {
  return signup_valid_token($token, $signup->sid, 'application');
}

/**
 * Generate a secure link to the application form for a given signup id.
 *
 * @param $type
 *   The type of link to create, currently 'pdf' is the only supported option.
 * @param $sid
 *   The signup id to create the link for.
 */
function signup_application_get_link($type, $sid) {
  $token = signup_get_token($sid, 'application');
  return url("signup/application/$type/$sid/$token", array('absolute' => TRUE));
}

/**
 * @ingroup token
 * @{
 */

/**
 * Implementation of hook_token_list().
 */
function signup_application_token_list($type) {
  $tokens = array();
  if ($type == 'signup' || $type == 'all') {
    $tokens['signup']['signup-application-pdf-url'] = t('The URL of the PDF application form.');
    $tokens['signup']['signup-application-print-url'] = t('The URL of the printable application form.');
    $tokens['signup']['signup-application-token'] = t('A security token for the application form URL.');
  }
  return $tokens;
}

/**
 * Implementation of hook_token_values().
 */
function signup_application_token_values($type = 'all', $object = NULL) {
  $values = array();
  if ($type == 'signup') {
    $values['signup-application-pdf-url'] = signup_application_get_link('pdf', $object->sid);
    $values['signup-application-print-url'] = signup_application_get_link('print', $object->sid);
    $values['signup-application-token'] = signup_get_token($object->sid, 'application');
  }
  return $values;
}

/**
 * @} End of "ingroup token".
 */
